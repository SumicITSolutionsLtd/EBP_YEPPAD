# =================================================================================
# Grafana Datasource Configuration
# Purpose: Auto-provision Prometheus as data source
# =================================================================================

apiVersion: 1

datasources:
  - name: Prometheus
    type: prometheus
    access: proxy
    url: http://prometheus:9090
    isDefault: true
    editable: false
    jsonData:
      timeInterval: "15s"
      httpMethod: "POST"
      exemplarTraceIdDestinations:
        - name: trace_id
          datasourceUid: tempo
    version: 1
      
      # -------------------------------------------------------------------------------
      # NGINX ALERTS
      # -------------------------------------------------------------------------------
               - name: nginx
               interval: 30s
               rules:
                 - alert: NginxHighConnections
                   expr: nginx_connections_active > 1000
                   for: 5m
                   labels:
                     severity: warning
                     category: nginx
                   annotations:
                     summary: "High number of active Nginx connections"
                     description: "Active connections: {{ $value }}."

                 - alert: NginxHighErrorRate
                   expr: |
                     rate(nginx_http_requests_total{status=~"5.."}[5m]) / rate(nginx_http_requests_total[5m]) > 0.05
                   for: 5m
                   labels:
                     severity: critical
                     category: nginx
                   annotations:
                     summary: "High Nginx 5xx error rate"
                     description: "5xx error rate is {{ $value | humanizePercentage }}."

      # -------------------------------------------------------------------------------
      # REDIS CACHE ALERTS
      # -------------------------------------------------------------------------------
               - name: redis_cache
                 interval: 30s
                 rules:
                   - alert: RedisDown
                     expr: up{job="redis"} == 0
                     for: 1m
                     labels:
                       severity: critical
                       category: cache
                     annotations:
                       summary: "Redis is down"
                       description: "Redis instance has been unavailable for more than 1 minute."

                   - alert: RedisHighMemoryUsage
                     expr: (redis_memory_used_bytes / redis_memory_max_bytes) * 100 > 90
                     for: 5m
                     labels:
                       severity: warning
                       category: cache
                     annotations:
                       summary: "Redis memory usage is critically high"
                       description: "Redis memory usage is {{ $value }}%"

                   - alert: RedisRejectedConnections
                     expr: increase(redis_rejected_connections_total[1m]) > 0
                     for: 1m
                     labels:
                       severity: warning
                       category: cache
                     annotations:
                       summary: "Redis is rejecting connections"
                       description: "Redis rejected {{ $value }} connections in the last minute."