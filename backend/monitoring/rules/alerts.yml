# =================================================================================
# Prometheus Alert Rules for Entrepreneurship Booster Platform
# Purpose: Define alerting thresholds for critical system metrics
# =================================================================================

groups:
  # -------------------------------------------------------------------------------
  # SERVICE AVAILABILITY ALERTS
  # -------------------------------------------------------------------------------
  - name: service_availability
    interval: 30s
    rules:
      - alert: ServiceDown
        expr: up{critical="true"} == 0
        for: 2m
        labels:
          severity: critical
          category: availability
        annotations:
          summary: "Service {{ $labels.service }} is down"
          description: "{{ $labels.service }} has been unavailable for more than 2 minutes."

      - alert: ServiceDegradedHealth
        expr: spring_boot_application_health_status{status!="UP"} == 1
        for: 5m
        labels:
          severity: warning
          category: health
        annotations:
          summary: "Service {{ $labels.service }} health degraded"
          description: "{{ $labels.service }} health status is {{ $labels.status }}."

  # -------------------------------------------------------------------------------
  # PERFORMANCE ALERTS
  # -------------------------------------------------------------------------------
  - name: performance
    interval: 30s
    rules:
      - alert: HighResponseTime
        expr: |
          histogram_quantile(0.95, 
            rate(http_server_requests_seconds_bucket{job!~"prometheus|grafana"}[5m])
          ) > 2
        for: 10m
        labels:
          severity: warning
          category: performance
        annotations:
          summary: "High response time on {{ $labels.service }}"
          description: "95th percentile response time is {{ $value }}s (threshold: 2s)."

      - alert: HighErrorRate
        expr: |
          (
            rate(http_server_requests_seconds_count{status=~"5.."}[5m])
            /
            rate(http_server_requests_seconds_count[5m])
          ) * 100 > 5
        for: 5m
        labels:
          severity: critical
          category: errors
        annotations:
          summary: "High error rate on {{ $labels.service }}"
          description: "Error rate is {{ $value }}% (threshold: 5%)."

  # -------------------------------------------------------------------------------
  # DATABASE ALERTS
  # -------------------------------------------------------------------------------
  - name: database
    interval: 30s
    rules:
      - alert: DatabaseConnectionPoolExhausted
        expr: hikaricp_connections_active / hikaricp_connections_max > 0.9
        for: 5m
        labels:
          severity: warning
          category: database
        annotations:
          summary: "Database connection pool nearly exhausted on {{ $labels.service }}"
          description: "Connection pool usage is {{ $value | humanizePercentage }}."

      - alert: SlowDatabaseQueries
        expr: |
          histogram_quantile(0.95, 
            rate(spring_data_repository_invocations_seconds_bucket[5m])
          ) > 1
        for: 10m
        labels:
          severity: warning
          category: database
        annotations:
          summary: "Slow database queries on {{ $labels.service }}"
          description: "95th percentile query time is {{ $value }}s."

      - alert: MySQLDown
        expr: up{job="mysql"} == 0
        for: 1m
        labels:
          severity: critical
          category: database
        annotations:
          summary: "MySQL database is down"
          description: "MySQL has been unavailable for more than 1 minute."

  # -------------------------------------------------------------------------------
  # CACHE ALERTS
  # -------------------------------------------------------------------------------
  - name: cache
    interval: 30s
    rules:
      - alert: LowCacheHitRate
        expr: |
          (
            rate(cache_gets{result="hit"}[5m])
            /
            rate(cache_gets[5m])
          ) < 0.5
        for: 10m
        labels:
          severity: warning
          category: cache
        annotations:
          summary: "Low cache hit rate on {{ $labels.service }}"
          description: "Cache hit rate is {{ $value | humanizePercentage }} (threshold: 50%)."

      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 1m
        labels:
          severity: critical
          category: cache
        annotations:
          summary: "Redis cache is down"
          description: "Redis has been unavailable for more than 1 minute."

      - alert: RedisMemoryHigh
        expr: redis_memory_used_bytes / redis_memory_max_bytes > 0.9
        for: 5m
        labels:
          severity: warning
          category: cache
        annotations:
          summary: "Redis memory usage high"
          description: "Redis memory usage is {{ $value | humanizePercentage }}."

  # -------------------------------------------------------------------------------
  # JVM ALERTS
  # -------------------------------------------------------------------------------
  - name: jvm
    interval: 30s
    rules:
      - alert: HighMemoryUsage
        expr: |
          (jvm_memory_used_bytes{area="heap"} / jvm_memory_max_bytes{area="heap"}) > 0.85
        for: 10m
        labels:
          severity: warning
          category: jvm
        annotations:
          summary: "High heap memory usage on {{ $labels.service }}"
          description: "Heap memory usage is {{ $value | humanizePercentage }}."

      - alert: FrequentGarbageCollection
        expr: rate(jvm_gc_pause_seconds_count[5m]) > 10
        for: 10m
        labels:
          severity: warning
          category: jvm
        annotations:
          summary: "Frequent garbage collection on {{ $labels.service }}"
          description: "GC frequency is {{ $value }} times per second."

      - alert: LongGarbageCollectionPause
        expr: |
          histogram_quantile(0.95, 
            rate(jvm_gc_pause_seconds_bucket[5m])
          ) > 0.5
        for: 10m
        labels:
          severity: warning
          category: jvm
        annotations:
          summary: "Long GC pauses on {{ $labels.service }}"
          description: "95th percentile GC pause is {{ $value }}s."

  # -------------------------------------------------------------------------------
  # SYSTEM RESOURCE ALERTS
  # -------------------------------------------------------------------------------
  - name: system_resources
    interval: 30s
    rules:
      - alert: HighCPUUsage
        expr: |
          100 - (avg by (instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 10m
        labels:
          severity: warning
          category: system
        annotations:
          summary: "High CPU usage on {{ $labels.instance }}"
          description: "CPU usage is {{ $value }}%."

      - alert: HighMemoryUsageSystem
        expr: |
          (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
        for: 10m
        labels:
          severity: warning
          category: system
        annotations:
          summary: "High memory usage on {{ $labels.instance }}"
          description: "Memory usage is {{ $value }}%."

      - alert: DiskSpaceLow
        expr: |
          (node_filesystem_avail_bytes{mountpoint="/"} / node_filesystem_size_bytes{mountpoint="/"}) * 100 < 15
        for: 5m
        labels:
          severity: critical
          category: system
        annotations:
          summary: "Low disk space on {{ $labels.instance }}"
          description: "Disk space available: {{ $value }}%."

  # -------------------------------------------------------------------------------
  # BUSINESS METRICS ALERTS
  # -------------------------------------------------------------------------------
  - name: business_metrics
    interval: 1m
    rules:
      - alert: LowUserRegistrations
        expr: rate(user_registrations_total[1h]) < 0.1
        for: 2h
        labels:
          severity: info
          category: business
        annotations:
          summary: "Low user registration rate"
          description: "Only {{ $value }} registrations per hour in last 2 hours."

      - alert: HighApplicationRejectionRate
        expr: |
          (
            rate(applications_rejected_total[1h])
            /
            rate(applications_submitted_total[1h])
          ) > 0.7
        for: 1h
        labels:
          severity: warning
          category: business
        annotations:
          summary: "High application rejection rate"
          description: "Rejection rate is {{ $value | humanizePercentage }}."

      - alert: NotificationDeliveryFailures
        expr: |
          (
            rate(notification_delivery_failed_total[5m])
            /
            rate(notification_delivery_attempts_total[5m])
          ) > 0.1
        for: 10m
        labels:
          severity: warning
          category: integration
        annotations:
          summary: "High notification delivery failure rate"
          description: "Failure rate is {{ $value | humanizePercentage }}."

  # -------------------------------------------------------------------------------
  # NGINX ALERTS
  # -------------------------------------------------------------------------------
  - name: nginx
    interval: 30s
    rules:
      - alert: NginxHighConnections
        expr: nginx_connections_active > 1000
        for: 5m
        labels:
          severity: warning
          category: nginx
        annotations:
          summary: "High number of active Nginx connections"
          description: "Active connections: {{ $value }}."

      - alert: NginxHighErrorRate
        expr: |
          rate(nginx_http_requests_total{status=~"5.."}[5m]) / rate(nginx_http_requests_total[5m]) > 0.05
        for: 5m
        labels:
          severity: critical
          category: nginx
        annotations:
          summary: "High Nginx 5xx error rate"
          description: "5xx error rate is {{ $value | humanizePercentage }}."