# =============================================================================
# MENTOR SERVICE - APPLICATION CONFIGURATION
# =============================================================================
# Service: Mentorship matching, session scheduling, and mentor management
# Port: 8085
# Dependencies: user-service, notification-service, service-registry
# =============================================================================

spring:
  application:
    name: mentor-service

  # =============================================================================
  # PROFILES CONFIGURATION
  # =============================================================================
  # Active profile determines which environment-specific config to use
  # Options: dev, staging, prod
  # =============================================================================
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}

  # =============================================================================
  # DATABASE CONFIGURATION
  # =============================================================================
  # MySQL 8.0 with InnoDB engine for ACID compliance
  # Connection pool managed by HikariCP for optimal performance
  # =============================================================================
  datasource:
    # Database connection URL
    # Format: jdbc:mysql://host:port/database?params
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3307}/${DB_NAME:ebp_db}?useSSL=false&serverTimezone=Africa/Kampala&allowPublicKeyRetrieval=true

    # Database credentials (should be externalized in production)
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:Douglas20!}

    # Database driver
    driver-class-name: com.mysql.cj.jdbc.Driver

    # =============================================================================
    # HIKARICP CONNECTION POOL CONFIGURATION
    # =============================================================================
    # Optimized for high concurrency and low latency
    # =============================================================================
    hikari:
      # Maximum number of connections in the pool
      # Formula: ((core_count * 2) + effective_spindle_count)
      maximum-pool-size: ${DB_POOL_SIZE:20}

      # Minimum number of idle connections to maintain
      minimum-idle: ${DB_POOL_MIN_IDLE:5}

      # Maximum time (ms) a connection can sit idle before being removed
      idle-timeout: 300000  # 5 minutes

      # Maximum lifetime (ms) of a connection in the pool
      max-lifetime: 1800000  # 30 minutes

      # Maximum time (ms) to wait for a connection from the pool
      connection-timeout: 20000  # 20 seconds

      # Connection test query to validate connections
      connection-test-query: SELECT 1

      # Pool name for monitoring/logging
      pool-name: MentorServiceHikariPool

  # =============================================================================
  # JPA/HIBERNATE CONFIGURATION
  # =============================================================================
  # Object-Relational Mapping configuration for database operations
  # =============================================================================
  jpa:
    # Database platform/dialect
    database-platform: org.hibernate.dialect.MySQL8Dialect

    # Show SQL queries in logs (disable in production)
    show-sql: ${JPA_SHOW_SQL:false}

    # Format SQL for readability (disable in production)
    properties:
      hibernate:
        format_sql: true
        # Use JDBC batching for bulk operations
        jdbc:
          batch_size: 20
        # Second-level cache configuration
        cache:
          use_second_level_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory
        # Query plan cache
        query:
          plan_cache_max_size: 2048

    # Schema generation strategy
    # Options: none, validate, update, create, create-drop
    # Production should use 'validate' with Flyway for migrations
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:validate}

  # =============================================================================
  # FLYWAY DATABASE MIGRATION
  # =============================================================================
  # Manages database schema versions and migrations
  # =============================================================================
  flyway:
    enabled: true
    # Location of migration scripts
    locations: classpath:db/migration
    # Baseline on migrate for existing databases
    baseline-on-migrate: true
    # Validate migrations on startup
    validate-on-migrate: true

  # =============================================================================
  # CACHING CONFIGURATION
  # =============================================================================
  # Caffeine-based in-memory caching for performance
  # =============================================================================
  cache:
    type: caffeine
    cache-names:
      - mentors           # Mentor profile cache
      - sessions          # Session details cache
      - availability      # Mentor availability cache
      - reviews           # Review/rating cache
      - statistics        # Aggregated stats cache
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=30m

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
server:
  port: ${SERVER_PORT:8090}

  # Servlet configuration
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

  # Error handling
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param  # Include stacktrace only when requested
    include-exception: false

  # Connection timeout
  connection-timeout: 20000  # 20 seconds

  # Compression
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# =============================================================================
# EUREKA CLIENT CONFIGURATION
# =============================================================================
# Service registration and discovery with Netflix Eureka
# =============================================================================
eureka:
  client:
    # Enable service registration
    register-with-eureka: true
    # Enable service discovery
    fetch-registry: true
    # Eureka server URL
    service-url:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka/}
    # Registry fetch interval (seconds)
    registry-fetch-interval-seconds: 30

  instance:
    # Unique instance ID
    instance-id: ${spring.application.name}:${random.value}
    # Prefer IP address over hostname
    prefer-ip-address: true
    # Lease renewal interval (seconds) - heartbeat frequency
    lease-renewal-interval-in-seconds: 30
    # Lease expiration duration (seconds) - time before instance is removed
    lease-expiration-duration-in-seconds: 90
    # Health check URL
    health-check-url-path: /actuator/health
    # Status page URL
    status-page-url-path: /actuator/info
    # Metadata for instance
    metadata-map:
      version: ${project.version:1.0.0}
      environment: ${spring.profiles.active}

# =============================================================================
# FEIGN CLIENT CONFIGURATION
# =============================================================================
# HTTP client for inter-service communication
# =============================================================================
feign:
  client:
    config:
      default:
        # Connection timeout (ms)
        connect-timeout: 5000
        # Read timeout (ms)
        read-timeout: 10000
        # Logging level
        logger-level: BASIC

      # User Service specific configuration
      user-service:
        url: ${USER_SERVICE_URL:http://user-service}

      # Notification Service specific configuration
      notification-service:
        url: ${NOTIFICATION_SERVICE_URL:http://notification-service}

  # Enable circuit breaker for Feign clients
  circuitbreaker:
    enabled: true

# =============================================================================
# RESILIENCE4J CIRCUIT BREAKER
# =============================================================================
# Fault tolerance and resilience patterns
# =============================================================================
resilience4j:
  circuitbreaker:
    instances:
      user-service:
        # Sliding window size for measuring failure rate
        sliding-window-size: 10
        # Minimum number of calls before calculating failure rate
        minimum-number-of-calls: 5
        # Failure rate threshold to open circuit (percentage)
        failure-rate-threshold: 50
        # Time circuit stays open before transitioning to half-open
        wait-duration-in-open-state: 10000  # 10 seconds
        # Number of calls in half-open state
        permitted-number-of-calls-in-half-open-state: 3
        # Automatically transition from open to half-open
        automatic-transition-from-open-to-half-open-enabled: true

      notification-service:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10000
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true

# =============================================================================
# SPRING BOOT ACTUATOR
# =============================================================================
# Monitoring and management endpoints
# =============================================================================
management:
  endpoints:
    web:
      exposure:
        # Expose all actuator endpoints
        include: health,info,metrics,prometheus,env,loggers
      base-path: /actuator

  endpoint:
    health:
      # Show detailed health information
      show-details: when-authorized
      # Enable disk space health indicator
      diskspace:
        enabled: true
        threshold: 10MB

  metrics:
    export:
      # Enable Prometheus metrics export
      prometheus:
        enabled: true
    # Enable JVM metrics
    enable:
      jvm: true
      process: true
      system: true

  info:
    # Include build info in /actuator/info
    build:
      enabled: true
    # Include Git info
    git:
      enabled: true
      mode: full

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Application and framework logging levels
# =============================================================================
logging:
  level:
    # Root logger level
    root: INFO
    # Application package logging
    com.youthconnect.mentor_service: ${LOG_LEVEL:DEBUG}
    # Spring framework
    org.springframework: INFO
    org.springframework.web: ${WEB_LOG_LEVEL:INFO}
    # Hibernate/JPA
    org.hibernate: WARN
    org.hibernate.SQL: ${SQL_LOG_LEVEL:DEBUG}
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    # Feign client logging
    feign: DEBUG
    # HikariCP connection pool
    com.zaxxer.hikari: INFO

  # Log file configuration
  file:
    name: ${LOG_FILE:logs/mentor-service.log}
    max-size: 10MB
    max-history: 30

  # Log pattern
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# =============================================================================
# SPRINGDOC OPENAPI (SWAGGER) CONFIGURATION
# =============================================================================
# API documentation generation
# =============================================================================
springdoc:
  api-docs:
    # Enable OpenAPI docs
    enabled: true
    path: /api-docs

  swagger-ui:
    # Enable Swagger UI
    enabled: true
    path: /swagger-ui.html
    # Sort operations by method
    operations-sorter: method
    # Sort tags alphabetically
    tags-sorter: alpha
    # Try it out enabled by default
    try-it-out-enabled: true

  # Packages to scan for API documentation
  packages-to-scan: com.youthconnect.mentor_service.controller

  # Show actuator endpoints in swagger
  show-actuator: false

# =============================================================================
# CUSTOM APPLICATION PROPERTIES
# =============================================================================
# Business logic and feature configuration
# =============================================================================
app:
  # Mentorship session configuration
  mentorship:
    # Default session duration (minutes)
    default-session-duration: 60
    # Maximum sessions per mentor per week
    max-sessions-per-week: 10
    # Minimum gap between sessions (minutes)
    min-session-gap: 30
    # Session reminder times (hours before session)
    reminder-times:
      - 24  # 1 day before
      - 1   # 1 hour before
    # Session auto-cancellation (hours of no-show)
    auto-cancel-threshold: 24

  # Review/Rating configuration
  reviews:
    # Minimum rating value
    min-rating: 1
    # Maximum rating value
    max-rating: 5
    # Enable moderation for reviews
    moderation-enabled: true
    # Minimum comment length
    min-comment-length: 10
    # Maximum comment length
    max-comment-length: 500

  # Matching algorithm configuration
  matching:
    # Minimum match score to show in recommendations (0-100)
    min-match-score: 60
    # Weight factors for matching algorithm
    weights:
      expertise: 0.4
      rating: 0.3
      availability: 0.2
      location: 0.1

  # Cache configuration
  cache:
    # Cache TTL (seconds) for different entities
    ttl:
      mentors: 1800      # 30 minutes
      sessions: 300      # 5 minutes
      availability: 600  # 10 minutes
      reviews: 3600      # 1 hour
      statistics: 1800   # 30 minutes

  # Feature flags
  features:
    # Enable video conferencing integration
    video-calls-enabled: ${VIDEO_CALLS_ENABLED:false}
    # Enable calendar integration (Google, Outlook)
    calendar-integration-enabled: ${CALENDAR_INTEGRATION_ENABLED:false}
    # Enable AI-powered matching
    ai-matching-enabled: ${AI_MATCHING_ENABLED:true}
    # Enable automated reminders
    auto-reminders-enabled: ${AUTO_REMINDERS_ENABLED:true}