version: '3.8'

#===========================================
# Entrepreneurship Booster Platform
# Docker Compose - Development Environment
#===========================================
# Author: Douglas Kings Kato
# Version: 1.0
# Date: 2025-01-25
#
# Services:
# - MySQL Database
# - Redis Cache
# - Eureka Service Registry
# - API Gateway
# - 8 Microservices
# - Nginx Reverse Proxy
#===========================================

services:

  #===========================================
  # DATABASE SERVICES
  #===========================================

  mysql:
    image: mysql:8.0
    container_name: epb-mysql
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: Douglas20!
      MYSQL_DATABASE: epb_db
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - epb-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.0-alpine
    container_name: epb-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass "redis_password"
    volumes:
      - redis_data:/data
    networks:
      - epb-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  #===========================================
  # INFRASTRUCTURE SERVICES
  #===========================================

  service-registry:
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    container_name: epb-service-registry
    restart: unless-stopped
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - epb-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: epb-api-gateway
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/
    depends_on:
      - service-registry
    networks:
      - epb-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  #===========================================
  # MICROSERVICES
  #===========================================

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: epb-user-service
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/epb_db?useSSL=false&serverTimezone=Africa/Nairobi
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Douglas20!
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/
    depends_on:
      mysql:
        condition: service_healthy
      service-registry:
        condition: service_started
    networks:
      - epb-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: epb-auth-service
    restart: unless-stopped
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/epb_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Douglas20!
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: redis_password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/
      JWT_SECRET: your-256-bit-secret-key-change-in-production
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      service-registry:
        condition: service_started
    networks:
      - epb-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  opportunity-service:
    build:
      context: ./opportunity-service
      dockerfile: Dockerfile
    container_name: epb-opportunity-service
    restart: unless-stopped
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/epb_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Douglas20!
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/
    depends_on:
      mysql:
        condition: service_healthy
      service-registry:
        condition: service_started
    networks:
      - epb-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  content-service:
    build:
      context: ./content-service
      dockerfile: Dockerfile
    container_name: epb-content-service
    restart: unless-stopped
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/epb_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Douglas20!
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/
    depends_on:
      mysql:
        condition: service_healthy
      service-registry:
        condition: service_started
    networks:
      - epb-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  mentor-service:
    build:
      context: ./mentor-service
      dockerfile: Dockerfile
    container_name: epb-mentor-service
    restart: unless-stopped
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/epb_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Douglas20!
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/
    depends_on:
      mysql:
        condition: service_healthy
      service-registry:
        condition: service_started
    networks:
      - epb-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: epb-notification-service
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/epb_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Douglas20!
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/
      AFRICAS_TALKING_API_KEY: your_api_key_here
      AFRICAS_TALKING_USERNAME: your_username_here
    depends_on:
      mysql:
        condition: service_healthy
      service-registry:
        condition: service_started
    networks:
      - epb-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  ussd-service:
    build:
      context: ./ussd-service
      dockerfile: Dockerfile
    container_name: epb-ussd-service
    restart: unless-stopped
    ports:
      - "8087:8087"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/epb_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Douglas20!
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: redis_password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      service-registry:
        condition: service_started
    networks:
      - epb-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8087/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  file-management-service:
    build:
      context: ./file-management-service
      dockerfile: Dockerfile
    container_name: epb-file-management-service
    restart: unless-stopped
    ports:
      - "8088:8088"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/epb_db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Douglas20!
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/
      FILE_STORAGE_LOCATION: /app/uploads
    volumes:
      - file_uploads:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy
      service-registry:
        condition: service_started
    networks:
      - epb-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 90s

  #=