# ================================================================================
# Service Registry (Eureka Server) - Development Configuration
# ================================================================================

spring:
  application:
    name: service-registry

  # Banner configuration
  banner:
    location: classpath:banner.txt

server:
  port: 8761
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,application/json
  tomcat:
    threads:
      max: 200
      min-spare: 10

# ================================================================================
# Eureka Server Configuration
# ================================================================================
eureka:
  instance:
    hostname: localhost
    prefer-ip-address: false
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

  client:
    # Standalone mode - don't register with itself
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: http://localhost:8761/eureka/
    registry-fetch-interval-seconds: 5

  server:
    # Development settings - disable self-preservation
    enable-self-preservation: false
    eviction-interval-timer-in-ms: 5000

    # Response cache settings
    response-cache-auto-expiration-in-seconds: 30
    response-cache-update-interval-ms: 5000

    # Peer replication settings (for cluster mode)
    peer-eureka-nodes-update-interval-ms: 10000
    peer-eureka-status-refresh-time-interval-ms: 10000

    # Rate limiting (prevent abuse)
    rate-limiter-enabled: true
    rate-limiter-burst-size: 100
    rate-limiter-registry-fetch-average-rate: 500
    rate-limiter-full-fetch-average-rate: 100

# ================================================================================
# Management & Monitoring
# ================================================================================
management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - info
          - metrics
          - prometheus
          - env
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  metrics:
    enabled: true
    export:
      prometheus:
        enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true

# ================================================================================
# Logging Configuration
# ================================================================================
logging:
  level:
    root: INFO
    com.netflix.eureka: INFO
    com.netflix.discovery: INFO
    com.youthconnect.service_registry: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"
  file:
    name: logs/service-registry.log
    max-size: 50MB
    max-history: 30
    total-size-cap: 1GB

# ================================================================================
# Application Info (for /actuator/info)
# ================================================================================
info:
  app:
    name: ${spring.application.name}
    description: Service Registry for YouthConnect Uganda Platform
    version: '@project.version@'
    encoding: '@project.build.sourceEncoding@'
    java:
      version: '@java.version@'