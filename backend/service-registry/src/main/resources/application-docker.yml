# ================================================================================
# Service Registry (Eureka Server) - Docker Configuration
# ================================================================================
# This configuration is activated when running in Docker containers
# Profile: docker
# ================================================================================

spring:
  application:
    name: service-registry

  # Security configuration for Docker environment
  security:
    user:
      name: ${EUREKA_USERNAME:admin}
      password: ${EUREKA_PASSWORD:changeme}

server:
  port: 8761
  # Enable compression for better network performance
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,application/json,application/xml
    min-response-size: 1024

# ================================================================================
# Eureka Server Configuration for Docker
# ================================================================================
eureka:
  instance:
    # Use container hostname for Docker networking
    hostname: ${EUREKA_HOSTNAME:service-registry}
    prefer-ip-address: false

    # Faster heartbeat for container environments
    lease-renewal-interval-in-seconds: 10
    lease-expiration-duration-in-seconds: 30

    # Instance metadata
    metadata-map:
      zone: docker
      environment: container
      version: '@project.version@'

  client:
    # Standalone mode - don't register with itself
    register-with-eureka: false
    fetch-registry: false

    # Service URL for other containers to discover this registry
    service-url:
      defaultZone: http://${EUREKA_USERNAME:admin}:${EUREKA_PASSWORD:changeme}@${EUREKA_HOSTNAME:service-registry}:8761/eureka/

    # Faster registry fetch for container environments
    registry-fetch-interval-seconds: 10

  server:
    # Enable self-preservation in Docker (network issues are common)
    enable-self-preservation: true
    renewal-percent-threshold: 0.85

    # Eviction settings for container environments
    eviction-interval-timer-in-ms: 10000

    # Response cache (balance between consistency and performance)
    response-cache-auto-expiration-in-seconds: 60
    response-cache-update-interval-ms: 10000

    # Peer replication for cluster mode
    peer-eureka-nodes-update-interval-ms: 15000
    peer-eureka-status-refresh-time-interval-ms: 15000

    # Rate limiting
    rate-limiter-enabled: true
    rate-limiter-burst-size: 100
    rate-limiter-registry-fetch-average-rate: 500

# ================================================================================
# Management & Monitoring for Docker
# ================================================================================
management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - info
          - metrics
          - prometheus
          - env
          - loggers
      base-path: /actuator

  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true  # Enable Kubernetes-style probes

  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
    diskspace:
      enabled: true
      threshold: 100MB

  metrics:
    enabled: true
    export:
      prometheus:
        enabled: true
        step: 1m

  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true

# ================================================================================
# Logging Configuration for Docker
# ================================================================================
logging:
  level:
    root: INFO
    com.netflix.eureka: INFO
    com.netflix.discovery: INFO
    com.youthconnect.service_registry: INFO

  # Structured logging for Docker/Kubernetes
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"

  # Log to console (Docker captures stdout/stderr)
  file:
    name: /var/log/youth-connect/service-registry.log
    max-size: 50MB
    max-history: 7
    total-size-cap: 500MB

# ================================================================================
# Application Info
# ================================================================================
info:
  app:
    name: ${spring.application.name}
    description: Service Registry for YouthConnect Uganda Platform (Docker)
    version: '@project.version@'
    encoding: '@project.build.sourceEncoding@'
    java:
      version: '@java.version@'
  environment: docker
  container: true