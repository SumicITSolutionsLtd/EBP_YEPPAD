package com.youthconnect.notification.service.repository;

import com.youthconnect.notification.service.entity.NotificationLog;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.time.LocalDateTime;
import java.util.List;

/**
 * Repository for notification tracking and management
 */
@Repository
public interface NotificationLogRepository extends JpaRepository<NotificationLog, Long> {

    /**
     * Find notifications by user ID
     */
    List<NotificationLog> findByUserIdOrderByCreatedAtDesc(Long userId);

    /**
     * Find failed notifications that need retry
     */
    @Query("SELECT n FROM NotificationLog n WHERE n.status = 'FAILED' AND n.retryCount < 3")
    List<NotificationLog> findFailedNotificationsForRetry();

    /**
     * Find notifications by status and date range
     */
    @Query("SELECT n FROM NotificationLog n WHERE n.status = :status AND n.createdAt BETWEEN :startDate AND :endDate")
    List<NotificationLog> findByStatusAndDateRange(
            @Param("status") NotificationLog.NotificationStatus status,
            @Param("startDate") LocalDateTime startDate,
            @Param("endDate") LocalDateTime endDate
    );

    /**
     * Count notifications by status
     */
    @Query("SELECT COUNT(n) FROM NotificationLog n WHERE n.status = :status")
    Long countByStatus(@Param("status") NotificationLog.NotificationStatus status);

    /**
     * Find recent notifications for user
     */
    @Query("SELECT n FROM NotificationLog n WHERE n.userId = :userId AND n.createdAt > :since ORDER BY n.createdAt DESC")
    List<NotificationLog> findRecentNotificationsByUser(
            @Param("userId") Long userId,
            @Param("since") LocalDateTime since
    );
}