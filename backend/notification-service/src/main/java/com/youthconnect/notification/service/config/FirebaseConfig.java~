package com.youthconnect.notification.service.config;

import com.google.auth.oauth2.GoogleCredentials;
import com.google.firebase.FirebaseApp;
import com.google.firebase.FirebaseOptions;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.io.ClassPathResource;

import javax.annotation.PostConstruct;
import java.io.IOException;
import java.io.InputStream;

/**
 * ═══════════════════════════════════════════════════════════════════════════
 * FIREBASE CONFIGURATION - PUSH NOTIFICATIONS
 * ═══════════════════════════════════════════════════════════════════════════
 *
 * Initializes Firebase Admin SDK for sending push notifications to mobile apps.
 *
 * Prerequisites:
 * 1. Create Firebase project at https://console.firebase.google.com
 * 2. Generate service account key (JSON file)
 * 3. Place firebase-service-account.json in src/main/resources/
 * 4. Add Android and iOS apps to Firebase project
 *
 * Features Enabled:
 * - Push notification sending to Android devices
 * - Push notification sending to iOS devices (with APNs)
 * - Topic-based messaging for broadcasts
 * - Device group messaging
 * - Notification analytics
 *
 * Security:
 * - Service account credentials required
 * - Server-side authentication only
 * - No client credentials exposed
 *
 * @author Douglas Kings Kato
 * @version 1.0
 */
@Configuration
@Slf4j
public class FirebaseConfig {

    @Value("${firebase.service-account-file:firebase-service-account.json}")
    private String serviceAccountFile;

    @Value("${firebase.project-id:kwetu-hub-uganda}")
    private String projectId;

    /**
     * Initialize Firebase Admin SDK on application startup.
     *
     * This method runs once during Spring context initialization.
     * Failure to initialize will prevent push notifications but won't crash the app.
     */
    @PostConstruct
    public void initializeFirebase() {
        try {
            log.info("🔧 Initializing Firebase Admin SDK...");

            // Check if Firebase is already initialized
            if (FirebaseApp.getApps().isEmpty()) {

                // Load service account credentials from classpath
                InputStream serviceAccount =
                        new ClassPathResource(serviceAccountFile).getInputStream();

                // Configure Firebase options
                FirebaseOptions options = FirebaseOptions.builder()
                        .setCredentials(GoogleCredentials.fromStream(serviceAccount))
                        .setProjectId(projectId)
                        .build();

                // Initialize Firebase app
                FirebaseApp.initializeApp(options);

                log.info("✅ Firebase Admin SDK initialized successfully");
                log.info("📱 Push notifications enabled for project: {}", projectId);

            } else {
                log.info("✅ Firebase already initialized");
            }

        } catch (IOException e) {
            log.error("❌ Failed to initialize Firebase Admin SDK", e);
            log.error("⚠️ Push notifications will be DISABLED");
            log.error("💡 Ensure {} exists in resources folder", serviceAccountFile);

            // Don't throw exception - allow service to start without push notifications
            // Other notification channels (SMS, Email) will still work
        }
    }

    /**
     * Provides FirebaseApp instance for injection.
     * Returns null if initialization failed.
     */
    @Bean
    public FirebaseApp firebaseApp() {
        try {
            return FirebaseApp.getInstance();
        } catch (IllegalStateException e) {
            log.warn("⚠️ FirebaseApp not initialized - push notifications unavailable");
            return null;
        }
    }

    /**
     * Check if Firebase is properly initialized.
     * Used by health check endpoint.
     */
    public boolean isFirebaseInitialized() {
        return !FirebaseApp.getApps().isEmpty();
    }

    /**
     * Get Firebase project configuration details for monitoring.
     */
    public String getProjectInfo() {
        if (isFirebaseInitialized()) {
            FirebaseApp app = FirebaseApp.getInstance();
            return String.format("Project: %s, Name: %s",
                    app.getOptions().getProjectId(),
                    app.getName());
        }
        return "Firebase not initialized";
    }
}